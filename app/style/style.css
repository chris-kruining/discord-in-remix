:root {

}

html {
    inline-size: 100%;
    block-size: 100%;
}

body {
    display: grid;
    grid: 100% / auto minmax(0, 1fr);
    grid-template-areas: 'nav content';
    inline-size: 100%;
    block-size: 100%;
    margin: 0;
}

nav.main {
    grid-area: nav;
    display: grid;
    grid-auto-flow: row;
    align-content: start;
    gap: .5em;
    padding: .5em;
}

nav.main hr {
    inline-size: 75%;
    block-size: .25em;
    border-radius: .25em;
}

nav.main .main__item {
    position: relative;
    display: grid;
}

nav.main .main__item::before {
    content: '';
    position: absolute;
    inset-inline-start: 0;
    inset-block-start: 50%;
    block-size: 50%;
    inline-size: .5em;
    border-radius: .5em;
    background-color: hsla(0deg 0% 0% / .2);
    transform: translate(-1em, -50%);
}

nav.main .main__item > span {
    display: grid;
    align-content: center;
    justify-content: center;
    inline-size: calc(3em / .75);
    block-size: calc(3em / .75);
    object-fit: cover;
    border-radius: calc(3em / .75 / 2);
    background-color: hsla(0deg 0% 0% / .2);
    font-size: .75em;
    overflow: hidden;
}

nav.main .main__item > span > :is(img, svg) {
    inline-size: calc(3em / .75);
    block-size: calc(3em / .75);
    object-fit: cover;
}

nav.main .main__item > span > svg {
    inline-size: calc(2em / .75);
    block-size: calc(2em / .75);
    padding: .5em;
    color: green;
}

nav.main .main__item .home {
    color: hsl(0deg 0% 50%);
}

nav.main .main__item:is(:hover, .active)::before {
    transform: translate(-.75em, -50%);
}

nav.main .main__item:hover::before {
    transition: transform .3s ease-in-out;
}

nav.main .main__item:is(:hover, .active) > span {
    border-radius: 1.5em;
}

nav.main .main__item:hover > span {
    transition: border-radius .25s ease-in-out;
}

nav.main .main__item.active::before {
    block-size: 100%;
}



body > main {
    display: grid;
    grid: 100% / 100%;
    border-top-left-radius: 1em;
    background-color: hsla(0deg 0% 0% / .1);
    transition: opacity .2s ease-out .3s, transform .2s ease-out .2s;
}

body.loading > main {
    transform: translateX(2.5em);
    opacity: 0;
}



.guild {
    display: grid;
    grid: auto minmax(0, 1fr) auto / auto minmax(0, 1fr);
    grid-template-areas: 'header main' 'nav main' 'footer main';
    inline-size: 100%;
    block-size: 100%;
    overflow: clip;
}

.guild > header {
    grid-area: header;
    display: grid;
    grid-template-columns: 1fr auto;
}

.guild > header > h1 {
    margin: 0;
}

.guild > nav {
    grid-area: nav;
    display: grid;
    align-content: start;
    gap: 1em;
    padding: .5em;
    inline-size: 10em;
}

.guild > nav section {
    display: grid;
    gap: .5em;
    padding-inline-start: 1em;
    padding-block: .5em;
}

.guild > nav section a {
    display: grid;
    grid-auto-flow: column;
    gap: .25em;
    justify-content: start;
    align-items: center;
    border-radius: .25em;
    padding: .25em;
}

.guild > nav section a:is(:hover, .active) {
    background-color: #0001;
}

.guild > main {
    grid-area: main;
    display: grid;
    grid: 100% / 100%;
}



.channel {
    display: grid;
    grid: auto minmax(0, 1fr) auto / 1fr auto;
    grid-template-areas:
        'header header'
        'main aside'
        'footer aside'
    ;
}

.channel > header {
    grid-area: header;
}

.channel > main {
    grid-area: main;
    display: flex;
    flex-direction: column-reverse;
    inline-size: 100%;
    block-size: 100%;
    overflow-y: auto;
    gap: 1em;
}

.channel > main .message > p {
    margin: 0;
}

.channel > aside {
    grid-area: aside;
    inline-size: 10em;
}

.channel > footer {
    grid-area: footer;
}